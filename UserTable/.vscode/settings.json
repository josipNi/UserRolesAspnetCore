{
    // Controls if the editor should automatically format the line after typing
    "editor.formatOnType": false,
    // Controls whether the editor should render whitespace characters
    "editor.renderWhitespace": "all",
    // Controls whether the editor should render indent guides
    "editor.renderIndentGuides": true,
    // Controls whether the editor has code folding enabled
    "editor.folding": true,
    // Enables font ligatures
    "editor.fontLigatures": true,
    // Remove trailing auto inserted whitespace
    "editor.trimAutoWhitespace": true,
    // Format a file on save. A formatter must be available, the file must not be auto-saved, and editor must not be shutting down.
    "editor.formatOnSave": true,
    // Controls if lines should wrap. The lines will wrap at min(editor.wrappingColumn, viewportWidthInColumns).
    "editor.wordWrap": true,
    // HTML
    // Whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.
    "html.format.preserveNewLines": true,
    // Maximum number of line breaks to be preserved in one chunk. Use 'null' for unlimited.
    "html.format.maxPreserveNewLines": 1,
    //-------- Files configuration --------
    // The default character set encoding to use when reading and writing files.
    "files.encoding": "utf8",
    // The default end of line character.
    "files.eol": "\r\n",
    // Controls auto save of dirty files. Accepted values:  "off", "afterDelay", "onFocusChange". If set to "afterDelay" you can configure the delay in "files.autoSaveDelay".
    "files.autoSave": "off",
    // Controls the delay in ms after which a dirty file is saved automatically. Only applies when "files.autoSave" is set to "afterDelay"
    //"files.autoSaveDelay": 1000,
    // Configure glob patterns for excluding files and folders.
    "files.exclude": {
        "**/.git": true,
        "**/.DS_Store": true,
        "**/*.js": {
            "when": "$(basename).ts"
        }
    },
    // When enabled, will trim trailing whitespace when you save a file.
    "files.trimTrailingWhitespace": false,
    //-------- Update configuration --------
    // Configure the update channel to receive updates from. Requires a restart after change.
    "update.channel": "default",
    //-------- JavaScript configuration --------
    // Complete functions with their parameter signature.
    //"javascript.suggest.//seCodeSnippetsOnMethodSuggest": true,
    // Use '!==' and '===' instead of '!=' and '=='.
    //"javascript.validate.lint.//comparisonOperatorsNotStrict": "warning",
    // Run linter checks for JavaScript files - overrides validate.lint.* settings.
    //"javascript.validate.semanticValidation": true,
    // Check JavaScript files for syntax errors.
    //"javascript.validate.syntaxValidation": true,
    // Controls VSCode's Javascript validation. If set to false both syntax and sematic validation is disabled
    "javascript.validate.enable": true,
    //-------- TypeScript configuration --------
    // Enable/disable the references code lens
    "typescript.referencesCodeLens.enabled": true,
    // Complete functions with their parameter signature.
    "typescript.useCodeSnippetsOnMethodSuggest": true,
    // Enable/disable TypeScript validation.
    "typescript.validate.enable": true,
    // Defines whether an open brace is put onto a new line for functions or not.
    "typescript.format.placeOpenBraceOnNewLineForFunctions": false,
    // Defines whether an open brace is put onto a new line for control blocks or not.
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,
    // Specifies the folder path containing the tsserver and lib*.d.ts files to use.
    //"typescript.tsdk": "C:/Users/lukaj/.npmrepo/node_modules/typescript/lib",
    "typescript.tsdk": "./Web/node_modules/typescript/lib",
    //-------- Window configuration --------
    // When enabled, will open files in a new window instead of reusing an existing instance.
    "window.openFilesInNewWindow": "off",
    // Controls how folders are being reopened after a restart. Select 'none' to never reopen a folder, 'one' to reopen the last folder you worked on or 'all' to reopen all folders of your last session.
    "window.reopenFolders": "one",
    //-------- ESLint configuration --------
    // Control whether eslint is enabled for JavaScript files or not.
    "eslint.enable": true,
    // The eslint options object to provide args to the eslint command.
    "eslint.options": {},
    // Turns auto fix on save on or off.
    "eslint.autoFixOnSave": true,
    // An array of language ids which should be validated by ESLint
    "eslint.validate": [
        "javascript",
        "javascriptreact"
    ],
    //--------- TSLint configuration --------
    // Control whether tslint is enabled for TypeScript files or not.
    "tslint.enable": true,
    // Turns auto fix on save on or off.
    "tslint.autoFixOnSave": true,
    // Addition rules directory
    "tslint.rulesDirectory": "./Web/node_modules/codelyzer",
    // Extensions
    // Automatically update extensions
    "extensions.autoUpdate": true,
    //-----------Debug----------------------
    // Show variable values inline in editor while debugging
    "debug.inlineValues": true,
    "json.schemas": [
        {
            "fileMatch": [
                "**/.jsbeautifyrc"
            ],
            "url": "http://json.schemastore.org/jsbeautifyrc"
        }
    ],
    "vsicons.dontShowNewVersionMessage": true
}